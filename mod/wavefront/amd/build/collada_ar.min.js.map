{"version":3,"file":"collada_ar.min.js","sources":["../src/collada_ar.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Encapsules the behavior for creating a Wavefront 3D model in Moodle.\n *\n * Manages the UI while operations are occuring, including rendering and manipulating the model.\n *\n * @module    mod_wavefront/collada_ar\n * @class     ar_renderer\n * @package   mod_wavefront\n * @copyright 2022 Ian Wild\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since     3.9\n */\n\nimport * as THREE from 'mod_wavefront/three';\nimport { ColladaLoader } from 'mod_wavefront/ColladaLoader';\nimport { ARButton } from 'mod_wavefront/ARButton';\nimport jQuery from 'jquery';\n\nlet camera, scene, renderer, mixer = null, clock = null;\nlet controller;\n\nlet reticle;\nlet object;\nlet objectscale;\n\nlet hitTestSource = null;\nlet hitTestSourceRequested = false;\n\n\nexport const init = (stage, scale) => {\n\n    var container = document.getElementById(stage);\n    console.log(container);\n    \n    // Object vector scaling\n    objectscale = scale;\n    \n    // Get model files\n    var baseurl = jQuery(container).attr(\"data-baseurl\");\n    var base_url = decodeURIComponent(baseurl);\n    console.log(base_url);\n    \n    var dae = jQuery(container).attr(\"data-dae\");\n    var dae_file = decodeURIComponent(dae);\n    console.log(dae_file);\n    \n    // Get camera attributes\n    var cameraangle = jQuery(container).attr(\"data-cameraangle\");\n    console.log(cameraangle);\n    var cameranear = jQuery(container).attr(\"data-cameranear\");\n    console.log(cameranear);\n    var camerafar = jQuery(container).attr(\"data-camerafar\");\n    console.log(camerafar);\n    var camerax = jQuery(container).attr(\"data-camerax\");\n    console.log(camerax);\n    var cameray = jQuery(container).attr(\"data-cameray\");\n    console.log(cameray);\n    var cameraz = jQuery(container).attr(\"data-cameraz\");\n    console.log(cameraz);\n    \n    clock = new THREE.Clock();\n\n    scene = new THREE.Scene();\n\n    var VIEW_ANGLE = Number(cameraangle), ASPECT = window.innerWidth / window.innerHeight, NEAR = Number(cameranear), FAR = Number(camerafar);\n    camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\n    camera.position.set(Number(camerax),Number(cameray),Number(cameraz));    \n\n    // Lighting\n    var keyLight = new THREE.DirectionalLight(new THREE.Color('hsl(30, 100%, 75%)'), 1.0);\n    keyLight.position.set(-100, 0, 100);\n            \n    var fillLight = new THREE.DirectionalLight(new THREE.Color('hsl(240, 100%, 75%)'), 0.75);\n    fillLight.position.set(100, 0, 100);\n            \n    var backLight = new THREE.DirectionalLight(0xffffff, 1.0);\n    backLight.position.set(100, 0, -100).normalize();\n\n    scene.add(keyLight);\n    scene.add(fillLight);\n    scene.add(backLight);\n    \n    //\n\n    renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.xr.enabled = true;\n    renderer.xr.setReferenceSpaceType('local');\n    container.appendChild(renderer.domElement);\n\n    //\n    \n    renderer.xr.addEventListener(\n        'sessionend', function ( event ) {\n            scene.remove(object);\n            scene.add(reticle);\n            reticle.visible = false;\n            controller.addEventListener('select', onSelect);\n        }\n    );\n    \n    //\n\n    document.body.appendChild(ARButton.createButton(renderer, { requiredFeatures: [ 'hit-test' ] }));\n\n    //\n\nfunction onSelect()\n{\n\n    if (reticle.visible ) {\n\n        /* Load model */\n        var daeLoader = new ColladaLoader();\n        daeLoader.load(\n            dae_file, (collada) => {\n                var animations = collada.animations;\n                object = collada.scene;\n                object.traverse(\n                function ( node ) {\n        \n                    if (node.isSkinnedMesh ) {\n        \n                        node.frustumCulled = false;\n        \n                    }\n        \n                } \n            );\n            mixer = new THREE.AnimationMixer(object);\n            // TODO play all animations\n            mixer.clipAction(animations[ 0 ]).play();\n            // Neither rotation nor scale are used when displaying Collada models in AR\n            var rotation = new THREE.Quaternion();\n            var scale = new THREE.Vector3();\n            reticle.matrix.decompose(object.position, rotation, scale);\n            object.scale.set(objectscale,objectscale,objectscale);\n            scene.add(object);\n            controller.removeEventListener('select', onSelect);\n            scene.remove(reticle);\n            }\n        );\n    }\n}\n\n    controller = renderer.xr.getController(0);\n    controller.addEventListener('select', onSelect);\n    scene.add(controller);\n\n    reticle = new THREE.Mesh(\n        new THREE.RingGeometry(0.15, 0.2, 32).rotateX(- Math.PI / 2),\n        new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    //\n\n    window.addEventListener('resize', onWindowResize);\n\n    animate();\n}\n\nfunction onWindowResize()\n{\n\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n}\n\n//\n\nfunction render( timestamp, frame )\n{\n    if (frame ) {\n\n        const referenceSpace = renderer.xr.getReferenceSpace();\n        const session = renderer.xr.getSession();\n\n        if (hitTestSourceRequested === false ) {\n\n            session.requestReferenceSpace('viewer').then(\n                function ( referenceSpace ) {\n\n                    session.requestHitTestSource({ space: referenceSpace }).then(\n                        function ( source ) {\n\n                            hitTestSource = source;\n\n                        } \n                    );\n\n                } \n            );\n\n            session.addEventListener(\n                'end', function () {\n\n                    hitTestSourceRequested = false;\n                    hitTestSource = null;\n\n                } \n            );\n\n            hitTestSourceRequested = true;\n\n        }\n\n        if (hitTestSource ) {\n\n            const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n            if (hitTestResults.length ) {\n\n                const hit = hitTestResults[ 0 ];\n\n                reticle.visible = true;\n                reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n\n            } else {\n\n                reticle.visible = false;\n\n            }\n\n        }\n\n    }\n    \n    if(mixer !== null) {\n        var delta = clock.getDelta();\n\n        mixer.update(delta);    \n    }\n\n    renderer.render(scene, camera);\n}\n\nfunction animate()\n{\n\n    renderer.setAnimationLoop(render);\n\n}\n"],"names":["camera","scene","renderer","controller","reticle","object","objectscale","mixer","clock","hitTestSource","hitTestSourceRequested","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","render","timestamp","frame","referenceSpace","xr","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","addEventListener","hitTestResults","getHitTestResults","length","hit","visible","matrix","fromArray","getPose","transform","delta","getDelta","update","stage","scale","container","document","getElementById","console","log","baseurl","attr","base_url","decodeURIComponent","dae","dae_file","cameraangle","cameranear","camerafar","camerax","cameray","cameraz","THREE","Clock","Scene","VIEW_ANGLE","Number","ASPECT","NEAR","FAR","PerspectiveCamera","position","set","keyLight","DirectionalLight","Color","fillLight","backLight","onSelect","ColladaLoader","load","collada","animations","traverse","node","isSkinnedMesh","frustumCulled","AnimationMixer","clipAction","play","rotation","Quaternion","Vector3","decompose","add","removeEventListener","remove","normalize","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","enabled","setReferenceSpaceType","appendChild","domElement","event","body","ARButton","createButton","requiredFeatures","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","setAnimationLoop"],"mappings":"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"}