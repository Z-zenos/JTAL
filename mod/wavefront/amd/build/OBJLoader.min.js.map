{"version":3,"file":"OBJLoader.min.js","sources":["../src/OBJLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3\n} from 'mod_wavefront/three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet line = '', lineFirstChar = '';\n\t\tlet lineLength = 0;\n\t\tlet result = [];\n\n\t\t// Faster to just trim left side of the line. Use if available.\n\t\tconst trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tline = lines[ i ];\n\n\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\tlineLength = line.length;\n\n\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( /\\s+/ );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( /\\s+/ );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"names":["_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_vA","Vector3","_vB","_vC","_ab","_cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","this","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","Loader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","vertexData","substr","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","prototype","copy","call","color","map","materialLine","MeshPhongMaterial","flatShading","vertexColors","mesh","addGroup","LineSegments","Points","Mesh","add","points"],"mappings":"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"}