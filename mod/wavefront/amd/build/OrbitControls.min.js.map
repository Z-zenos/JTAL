{"version":3,"file":"OrbitControls.min.js","sources":["../src/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'mod_wavefront/three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","EventDispatcher","constructor","object","domElement","undefined","console","warn","document","error","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","this","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","pointer","passive"],"mappings":"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"}