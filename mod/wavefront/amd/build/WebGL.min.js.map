{"version":3,"file":"WebGL.min.js","sources":["../src/WebGL.js"],"sourcesContent":["class WebGL {\n\n    static isWebGLAvailable()\n    {\n\n        try {\n\n            const canvas = document.createElement('canvas');\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext('webgl') || canvas.getContext('experimental-webgl') ) );\n\n        } catch ( e ) {\n\n            return false;\n\n        }\n\n    }\n\n    static isWebGL2Available()\n    {\n\n        try {\n\n            const canvas = document.createElement('canvas');\n            return !! ( window.WebGL2RenderingContext && canvas.getContext('webgl2') );\n\n        } catch ( e ) {\n\n            return false;\n\n        }\n\n    }\n\n    static getWebGLErrorMessage()\n    {\n\n        return this.getErrorMessage(1);\n\n    }\n\n    static getWebGL2ErrorMessage()\n    {\n\n        return this.getErrorMessage(2);\n\n    }\n\n    static getErrorMessage( version )\n    {\n\n        const names = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts = {\n            1: window.WebGLRenderingContext,\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement('div');\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (contexts[ version ] ) {\n\n            message = message.replace('$0', 'graphics card');\n\n        } else {\n\n            message = message.replace('$0', 'browser');\n\n        }\n\n        message = message.replace('$1', names[ version ]);\n\n        element.innerHTML = message;\n\n        return element;\n\n    }\n\n}\n\nexport default WebGL;\n"],"names":["canvas","document","createElement","window","WebGLRenderingContext","getContext","e","WebGL2RenderingContext","this","getErrorMessage","version","contexts","message","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","replace","innerHTML"],"mappings":"oMAOkBA,OAASC,SAASC,cAAc,mBAC1BC,OAAOC,wBAA2BJ,OAAOK,WAAW,WAAYL,OAAOK,WAAW,uBAEhG,MAAQC,UAEC,wCAWDN,OAASC,SAASC,cAAc,mBAC1BC,OAAOI,yBAA0BP,OAAOK,WAAW,WAEjE,MAAQC,UAEC,wCASJE,KAAKC,gBAAgB,yCAOrBD,KAAKC,gBAAgB,0BAIRC,eAQdC,SAAW,GACVR,OAAOC,wBACPD,OAAOI,4BAGVK,QAAU,0IAERC,QAAUZ,SAASC,cAAc,cACvCW,QAAQC,GAAK,eACbD,QAAQE,MAAMC,WAAa,YAC3BH,QAAQE,MAAME,SAAW,OACzBJ,QAAQE,MAAMG,WAAa,SAC3BL,QAAQE,MAAMI,UAAY,SAC1BN,QAAQE,MAAMK,WAAa,OAC3BP,QAAQE,MAAMM,MAAQ,OACtBR,QAAQE,MAAMO,QAAU,QACxBT,QAAQE,MAAMQ,MAAQ,QACtBV,QAAQE,MAAMS,OAAS,aAInBZ,QAFAD,SAAUD,SAEAE,QAAQa,QAAQ,KAAM,iBAItBb,QAAQa,QAAQ,KAAM,WAIpCb,QAAUA,QAAQa,QAAQ,KAlCZ,GACP,UACA,WAgCgCf,UAEvCG,QAAQa,UAAYd,QAEbC"}